{"version":3,"sources":["components/Dropdown.js","components/OutlinedDropdown.js","components/WidthHeightTextInput.js","actions/form.js","components/TextileForm.js","methods/index.js","store/form.js","store/workbook.js","store/index.js","ExcelToJSON.js","App.js","serviceWorker.js","index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","withStyles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","maxWidth","chips","chip","noLabel","marginTop","props","classes","handleSelect","selectedItem","items","console","log","react_default","a","createElement","FormControl_default","className","InputLabel_default","htmlFor","Select_default","value","onChange","e","target","input","Input_default","id","map","item","MenuItem_default","key","OutlinedDropdown","_this$props","this","title","helperText","TextField_default","select","label","name","toLowerCase","textField","SelectProps","menu","variant","Component","container","marginLeft","marginRight","dense","dimensions","handleChange","concat","type","inputProps","min","max","height","setForm","newForm","payload","selectWorksheet","worksheet","TextileForm","formCopy","Object","objectSpread","form","selectedWorksheet","selectedPriceGroup","dim","at","findRow","findCol","length","tableHeight","tableWidth","i","slice","findIndex","c","parseInt","workbook","activeTable","Sheets","rangeString","sheet","range","XLSX","utils","decode_range","row","rowNum","colNum","s","r","nextCell","encode_cell","push","w","parseTableFromRange","total","_calculateTotal","Typography_default","column","WidthHeightTextInput","_handleChange","bind","components_OutlinedDropdown","units","SheetNames","filter","priceGroups","padding","flexDirection","connect","state","ownProps","dispatch","bindActionCreators","initialState","worksheets","arguments","undefined","action","activeSheet","find","ws","rootReducer","combineReducers","createStore","_callee","fileUrl","reader","fileBlob","regenerator_default","wrap","_context","prev","next","FileReader","fetch","sent","blob","onload","data","result","read","store","onerror","ex","readAsBinaryString","stop","App","_x","_ref","apply","ExcelToJSON","es","components_TextileForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99cfb1aa.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: theme.spacing.unit / 4,\n    },\n    noLabel: {\n      marginTop: theme.spacing.unit * 3,\n    },\n  });\n\nexport default withStyles(styles)(\n\n    (props)=>{\n        const {classes, handleSelect, selectedItem, items} = props;\n        console.log(items)\n        return (\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"select-multiple\">Name</InputLabel>\n                <Select\n\n                    value={selectedItem}\n                    onChange={(e)=>{\n                        handleSelect(e.target.value);\n                    }}\n                    input={<Input id=\"select-multiple\" />}\n                    MenuProps={MenuProps}\n                >\n                    {items.map(item => (\n                    <MenuItem key={item} value={item}>\n                        {item}\n                    </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            )\n    }\n)\n","import React, {Component} from 'react';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root:{\n    margin:'0.5rem 0 0.5rem 0'\n  },\n  container: {\n   display: 'flex',\n   flexWrap: 'wrap',\n },\n textField: {\n   marginLeft: theme.spacing.unit,\n   marginRight: theme.spacing.unit,\n },\n dense: {\n   marginTop: 16,\n },\n menu: {\n   width: 200,\n },\n})\n\n\n\nclass OutlinedDropdown extends Component {\n\n  render(){\n    const {classes, handleSelect, selectedItem, items, title, helperText} = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n         id=\"outlined-select-unit\"\n         select\n         label={title}\n         name={title.toLowerCase()}\n         className={classes.textField}\n         value={selectedItem}\n         onChange={handleSelect}\n         SelectProps={{\n           MenuProps: {\n             className: classes.menu,\n           },\n         }}\n         helperText={helperText}\n         margin=\"normal\"\n         variant=\"outlined\"\n       >\n         {items.map(item => (\n           <MenuItem key={item} value={item}>\n             {item}\n           </MenuItem>\n         ))}\n       </TextField>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(OutlinedDropdown)\n","\nimport React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n    root:{\n\n    },\n    textField:{\n      margin:'0 0.5rem'\n    }\n}\n\nexport default withStyles(styles)((props) => {\n    const {classes, dimensions, handleChange, maxWidth, maxHeight} = props;\n    console.log(\"dims:\")\n    console.log(dimensions)\n    console.log(`maxWidth maxHeight ${maxWidth}x${maxHeight}`)\n\n    return (\n    <div className={classes.root}>\n        <TextField\n          name=\"width\"\n          type=\"number\"\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Width\"\n          onChange={handleChange}\n          value={dimensions.width}\n          inputProps={{\n             min:0,\n             max:maxWidth\n           }}/>\n        <TextField\n          name=\"height\"\n          type=\"number\"\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Height\"\n          value={dimensions.height}\n          onChange={handleChange}\n          inputProps={{\n             min:0,\n             max:maxHeight\n           }}\n        />\n    </div>\n    )\n})\n","export const SELECT_WORKSHEET = 'SELECT_WORKSHEET';\nexport const SET_FORM = 'SET_FORM';\n\nexport const setForm = (newForm) => {\n    return {\n        type: SET_FORM,\n        payload: newForm\n    }\n}\nexport const selectWorksheet = (worksheet) => {\n    return {\n        type: SELECT_WORKSHEET,\n        payload: worksheet\n    }\n}\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Dropdown from './Dropdown';\nimport OutlinedDropdown from './OutlinedDropdown';\nimport WidthHeightTextInput from './WidthHeightTextInput';\n\n\n\nimport {selectWorksheet, setForm} from '../actions/form';\nimport {parseTableFromRange} from '../methods';\n\n\n\nconst styles = {\n  root:{\n    padding:'0.5rem'\n  },\n  column:{\n    display:'flex',\n    flexDirection:'column',\n    margin:'1rem 0'\n  },\n  row:{\n    display:'flex',\n    flexDirection:'row',\n    margin:'1rem 0'\n  }\n}\n\nclass TextileForm extends Component {\n  _handleChange(e) {\n    console.log(e.target)\n    let formCopy = {...this.props.form}\n    switch(e.target.name) {\n      case \"units\":\n      case \"width\":\n      case \"height\":\n        formCopy.dimensions[e.target.name] = e.target.value;\n        this.props.setForm(formCopy)\n        break;\n      case \"worksheet\":\n        formCopy.selectedWorksheet = e.target.value\n        this.props.setForm(formCopy)\n        break;\n      case \"pricegroup\":\n        formCopy.selectedPriceGroup = e.target.value\n        this.props.setForm(formCopy)\n        break;\n      default:\n        console.log(\"unhandled \")\n        console.log(e.target)\n    }\n  }\n\n  _calculateTotal(dim, at) {\n    console.log(\"calculatin omsethin\")\n    console.log(dim)\n    console.log(at)\n    let findRow = -1;\n    let findCol = -1;\n\n    if(at.length > 0) {\n      const tableHeight = at.length;  //rows\n      const tableWidth = at[0].length; //\n\n      console.log(`scanning ${tableWidth}x${tableHeight}`)\n      for(var i=0; i<tableHeight; i++){\n        //ignore 0,0\n        if(i===0) {\n          //scan header\n          console.log(\"Header col find:\")\n          console.log(at[i].slice(1))\n          findCol = at[i].slice(1).findIndex(c=>parseInt(c)>=dim.width)+1;\n          console.log(findCol)\n        } else {\n          //scan first element of each row\n\n          console.log(at[i][0])\n          if( parseInt(at[i][0])>=dim.height && findRow < 0) {\n            console.log(\"row find \" + i)\n            parseInt(at[i][0])\n            findRow=i\n          }\n        }\n\n      }\n      console.log(`found in ${findCol}x${findRow}`)\n      console.log(at[findCol][findRow])\n      return at[findRow][findCol]\n    }\n    return -1;\n  }\n\n  render () {\n    const {classes, form, workbook} = this.props\n    let activeTable = []\n\n    console.log(form)\n    console.log(workbook)\n    //workbook.Sheets[form.selectedWorksheet]['!ref'] = \"A5:S24\"\n\n    if(typeof workbook.Sheets[form.selectedWorksheet] !== 'undefined') {\n      const rangeString = \"A5:S24\"\n      activeTable = parseTableFromRange(rangeString, workbook.Sheets[form.selectedWorksheet])\n      console.log(activeTable)\n\n    }\n\n    //var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n    //   var json_object = JSON.stringify(XL_row_object);\n    const total = this._calculateTotal(form.dimensions, activeTable);\n\n    return (\n        <div className={classes.root}>\n          <Typography variant=\"title\">Interactive Pricing Form</Typography>\n\n\n          <div className={classes.column}>\n            <WidthHeightTextInput\n              maxWidth={activeTable[0] ? activeTable[0][activeTable[0].length-1] : 0}\n              maxHeight={activeTable[0] ? activeTable[activeTable.length-1][0] : 0}\n              dimensions={form.dimensions}\n              handleChange={this._handleChange.bind(this)}\n              />\n            <OutlinedDropdown\n              title=\"Units\"\n              helperText=\"Please select measurement unit\"\n              items={[\"inches\", \"centimetres\"]}\n              selectedItem={form.dimensions.units}\n              handleSelect={this._handleChange.bind(this)}/>\n          </div>\n          {/*Work Sheets Select*/\n            <div className={classes.row}>\n              <OutlinedDropdown\n                title=\"Worksheet\"\n                helperText=\"Select a Worksheet\"\n                items={workbook.SheetNames.filter(((a,i)=>i%2===0))}\n                selectedItem={this.props.form.selectedWorksheet}\n                handleSelect={this._handleChange.bind(this)}/>\n              <OutlinedDropdown\n                title=\"PriceGroup\"\n                helperText=\"Select a Price Group\"\n                items={this.props.form.selectedWorksheet === \"Interlude\" ? this.props.form.priceGroups.slice(0,4): this.props.form.priceGroups}\n                selectedItem={this.props.form.selectedPriceGroup}\n                handleSelect={this._handleChange.bind(this)}/>\n            </div>\n          }\n\n          <div>\n            <Typography variant=\"display1\"><b>Total:</b> {total} </Typography>\n          </div>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    form:state.form,\n    workbook:state.workbook\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return bindActionCreators({\n    selectWorksheet,\n    setForm\n  }, dispatch);\n}\n\nexport default withStyles(styles)(connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TextileForm))\n","import XLSX from 'xlsx-style';\n\nexport const parseTableFromRange = (rangeString, sheet) => {\n     const range = XLSX.utils.decode_range(rangeString);\n     console.log(range)\n     var activeTable = [];\n     var result = [];\n     var row;\n     var rowNum;\n     var colNum;\n     //var range = XLSX.utils.decode_range(sheet['!ref']);\n     for(rowNum = range.s.r; rowNum <= range.e.r; rowNum++){\n        row = [];\n         for(colNum=range.s.c; colNum<=range.e.c; colNum++){\n            var nextCell = sheet[\n               XLSX.utils.encode_cell({r: rowNum, c: colNum})\n            ];\n            if( typeof nextCell === 'undefined' ){\n               row.push(void 0);\n            } else row.push(nextCell.w);\n         }\n         activeTable.push(row);\n     }\n\n     return activeTable;\n}\n","const initialState = {\n    dimensions: {\n      units: 'inches',\n      height: 30,\n      width: 30\n    },\n    selectedWorksheet:'',\n    worksheets:[],\n    selectedPriceGroup: \"PG1\",\n    priceGroups:[\"PG1\",\"PG2\",\"PG3\",\"PG4\",\"PG5\",\"PG6\",\"PG7\",\"PG8\",\"PG9\",\"PG10\"]\n}\n\nconst form = (state = initialState, action) => {\n    console.log(action)\n    switch (action.type) {\n      case \"SET_FORM\":\n        return action.payload;\n      case 'WORKBOOK_IMPORT_SUCCESS':\n        return {\n            ...state,\n            selectedWorksheet:action.payload.SheetNames[0],\n            worksheets:action.payload.SheetNames\n        }\n      case 'SELECT_WORKSHEET':\n        return {\n            ...state,\n            selectedWorksheet:action.payload,\n            activeSheet:state.worksheets.find(ws=>ws)\n        }\n      default:\n        return state\n    }\n  }\n  export default form\n","const initialState = {\n    SheetNames:[],\n    Sheets:[],\n}\n\nconst workbook = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case 'WORKBOOK_IMPORT_SUCCESS':\n      return {\n          ...action.payload\n      }\n    case 'WORKBOOK_IMPORT_FAIL':\n      console.log(\"WORKBOOK_IMPORT_FAIL\")\n      console.log(action.payload)\n      return state;\n    default:\n      return state\n  }\n}\nexport default workbook\n","import { createStore } from 'redux'\nimport { combineReducers } from 'redux'\nimport form from './form';\nimport workbook from './workbook';\n\n\nconst rootReducer = combineReducers({\n    form,\n    workbook,\n    \n})\n\nexport default createStore(rootReducer)","import XLSX from 'xlsx-style';\n\nimport store from './store';\n\nexport default async function(fileUrl) {\n\n      var reader = new FileReader();\n      var fileBlob = await fetch(fileUrl);\n      fileBlob = await fileBlob.blob();\n  \n      reader.onload = function(e) {\n        console.log(e)\n\n        var data = e.target.result;\n        var workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n  \n        // workbook.SheetNames.forEach(function(sheetName) {\n        //   // Here is your object\n        //   var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n        //   var json_object = JSON.stringify(XL_row_object);\n        // })\n        store.dispatch({type:'WORKBOOK_IMPORT_SUCCESS', payload:workbook});\n      };\n  \n      reader.onerror = function(ex) {\n        store.dispatch({type:'WORKBOOK_IMPORT_FAIL', payload:ex});\n      };\n      \n      \n      reader.readAsBinaryString(fileBlob);\n\n  };","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\n\nimport TextileForm from './components/TextileForm';\n\nimport store from './store';\n\nimport ExcelToJSON from './ExcelToJSON';\n\n\n\nclass App extends Component {\n  componentWillMount(){\n     ExcelToJSON('./data/Price grids.xlsx');\n\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <TextileForm />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}