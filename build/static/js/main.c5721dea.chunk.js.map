{"version":3,"sources":["components/OutlinedDropdown.js","components/WidthHeightTextInput.js","components/AddValanceOption.js","actions/form.js","methods/index.js","components/TextileForm.js","store/form.js","store/workbook.js","store/index.js","ExcelToJSON.js","App.js","serviceWorker.js","index.js"],"names":["OutlinedDropdown","_this$props","this","props","classes","handleSelect","selectedItem","items","title","helperText","react_default","a","createElement","className","root","TextField_default","id","select","label","name","toLowerCase","textField","value","onChange","SelectProps","MenuProps","menu","margin","variant","map","item","MenuItem_default","key","Component","withStyles","theme","container","display","flexWrap","marginLeft","spacing","unit","marginRight","dense","marginTop","width","dimensions","handleChange","maxWidth","maxHeight","console","log","type","inputProps","min","max","height","column","flexDirection","row","alignItems","button","form","workbook","Typography_default","Button_default","onClick","e","target","showValance","Remove_default","Add_default","components_OutlinedDropdown","valanceOptions","selectedValanceOption","setForm","newForm","payload","selectWorksheet","worksheet","parseTableFromRange","rangeString","sheet","range","XLSX","utils","decode_range","rowNum","colNum","activeTable","s","r","c","nextCell","encode_cell","push","v","TextileForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_handleChange","bind","assertThisInitialized","_calculateTotal","formCopy","objectSpread","selectedWorksheet","selectedValance","concat","charAt","toUpperCase","selectedPriceGroup","parseInt","dim","at","vt","textileWidthInInches","textileHeightInInches","units","parseFloat","findRow","findCol","findVRow","length","tableHeight","i","slice","findIndex","tempOptions","toFixed","valanceTable","Sheets","priceGroups","pg","index","priceGroupMap","vindex","valances","valanceRangeString","valanceMap","total","WidthHeightTextInput","SheetNames","filter","AddValanceOption","connect","state","ownProps","dispatch","bindActionCreators","initialState","worksheets","arguments","undefined","action","charCodeAt","activeSheet","find","ws","rootReducer","combineReducers","createStore","_callee","fileUrl","reader","fileBlob","regenerator_default","wrap","_context","prev","next","FileReader","fetch","sent","blob","onload","data","result","read","store","onerror","ex","readAsBinaryString","stop","App","_x","_ref","apply","ExcelToJSON","es","components_TextileForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5721dea.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root:{\n    margin:'0.5rem 0 0.5rem 0'\n  },\n  container: {\n   display: 'flex',\n   flexWrap: 'wrap',\n },\n textField: {\n   marginLeft: theme.spacing.unit,\n   marginRight: theme.spacing.unit,\n },\n dense: {\n   marginTop: 16,\n },\n menu: {\n   width: 200,\n },\n})\n\n\n\nclass OutlinedDropdown extends Component {\n\n  render(){\n    const {classes, handleSelect, selectedItem, items, title, helperText} = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n         id=\"outlined-select-unit\"\n         select\n         label={title}\n         name={title.toLowerCase()}\n         className={classes.textField}\n         value={selectedItem}\n         onChange={handleSelect}\n         SelectProps={{\n           MenuProps: {\n             className: classes.menu,\n           },\n         }}\n         helperText={helperText}\n         margin=\"normal\"\n         variant=\"outlined\"\n       >\n         {items.map(item => (\n           <MenuItem key={item} value={item}>\n             {item}\n           </MenuItem>\n         ))}\n       </TextField>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(OutlinedDropdown)\n","\nimport React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n    root:{\n\n    },\n    textField:{\n      width:'5.5rem',\n      margin:'0 0.5rem'\n    }\n}\n\nexport default withStyles(styles)((props) => {\n    const {classes, dimensions, handleChange, maxWidth, maxHeight} = props;\n    console.log(maxWidth)\n    console.log(maxHeight)\n    return (\n    <div className={classes.root}>\n        <TextField\n          name=\"width\"\n          type=\"number\"\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Width\"\n          onChange={handleChange}\n          value={dimensions.width}\n          inputProps={{\n             min:0,\n             max:maxWidth\n           }}/>\n        <TextField\n          name=\"height\"\n          type=\"number\"\n          className={classes.textField}\n          variant=\"outlined\"\n          label=\"Height\"\n          value={dimensions.height}\n          onChange={handleChange}\n          inputProps={{\n             min:0,\n             max:maxHeight\n           }}\n        />\n    </div>\n    )\n})\n","import React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\n//import Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Icon from '@material-ui/core/Icon';\n\nimport OutlinedDropdown from './OutlinedDropdown'\n\nconst styles = {\n  root:{\n\n  },\n  column:{\n    display:'flex',\n    flexDirection:'column',\n    margin:'1rem 0'\n  },\n  row:{\n    display:'flex',\n    flexDirection:'row',\n    alignItems:'center',\n    margin:'1rem 0'\n  },\n  button:{\n    margin:'0 1rem'\n  }\n}\nexport default withStyles(styles)((props)=>{\n  const {classes, form, workbook, handleChange} = props\n  console.log(\"v form\")\n  console.log(form)\n  return (\n    <div>\n      <div className={classes.row}>\n        <Typography variant=\"title\">Valence Options</Typography>\n        <Button name=\"toggle-valance\" className={classes.button} variant=\"fab\" onClick={(e)=>{\n          handleChange({\n            target: {\n              name:'toggle-valance',\n            }\n          })\n        }}>{form.showValance ? <RemoveIcon></RemoveIcon>:<AddIcon></AddIcon>}</Button>\n      </div>\n      {form.showValance &&\n        <OutlinedDropdown\n          title=\"Valance\"\n          helperText=\"Please select valance option\"\n          items={form.valanceOptions}\n          selectedItem={form.selectedValanceOption !== \"\"? form.selectedValanceOption : form.valanceOptions[0]}\n          handleSelect={handleChange}\n          />\n      }\n    </div>\n\n  )\n})\n","export const SELECT_WORKSHEET = 'SELECT_WORKSHEET';\nexport const SET_FORM = 'SET_FORM';\n\nexport const setForm = (newForm) => {\n    return {\n        type: SET_FORM,\n        payload: newForm\n    }\n}\nexport const selectWorksheet = (worksheet) => {\n    return {\n        type: SELECT_WORKSHEET,\n        payload: worksheet\n    }\n}\n","import XLSX from 'xlsx-style';\n\nexport const parseTableFromRange = (rangeString, sheet) => {\n     const range = XLSX.utils.decode_range(rangeString);\n     console.log(range)\n     var activeTable = [];\n     var result = [];\n     var row;\n     var rowNum;\n     var colNum;\n     //var range = XLSX.utils.decode_range(sheet['!ref']);\n     for(rowNum = range.s.r; rowNum <= range.e.r; rowNum++){\n        row = [];\n         for(colNum=range.s.c; colNum<=range.e.c; colNum++){\n            var nextCell = sheet[\n               XLSX.utils.encode_cell({r: rowNum, c: colNum})\n            ];\n            if( typeof nextCell === 'undefined' ){\n               row.push(void 0);\n            } else row.push(nextCell.v);\n         }\n         activeTable.push(row);\n     }\n\n     return activeTable;\n}\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport OutlinedDropdown from './OutlinedDropdown';\nimport WidthHeightTextInput from './WidthHeightTextInput';\nimport AddValanceOption from './AddValanceOption'\n\nimport {selectWorksheet, setForm} from '../actions/form';\nimport {parseTableFromRange} from '../methods';\n\n\n//UNIT CONVERSION\nconst CM_TO_INCH=0.393701;\n\nconst styles = {\n  root:{\n\n  },\n  column:{\n    display:'flex',\n    flexDirection:'column',\n    margin:'1rem 0'\n  },\n  row:{\n    display:'flex',\n    flexDirection:'row',\n    margin:'1rem 0'\n  }\n}\n\nclass TextileForm extends Component {\n  constructor(){\n    super();\n    this._handleChange = this._handleChange.bind(this)\n    this._calculateTotal = this._calculateTotal.bind(this)\n  }\n  _handleChange(e) {\n    console.log(e.target)\n    let formCopy = {...this.props.form}\n    switch(e.target.name) {\n      case \"worksheet\":\n        formCopy.selectedWorksheet = e.target.value\n        formCopy.selectedValance = `${e.target.value.charAt(0).toUpperCase()} Valance`\n        this.props.setForm(formCopy)\n        break;\n      case \"pricegroup\":\n        formCopy.selectedPriceGroup = e.target.value\n        this.props.setForm(formCopy)\n        break;\n      case \"toggle-valance\":\n        this.props.setForm({ ...formCopy, showValance:!formCopy.showValance })\n        break;\n      case \"valance\":\n        formCopy.selectedValanceOption = e.target.value;\n        this.props.setForm(formCopy)\n        break;\n      case \"units\":\n        formCopy.dimensions[e.target.name] = e.target.value;\n        this.props.setForm(formCopy)\n        break;\n      case \"width\":\n      case \"height\":\n        formCopy.dimensions[e.target.name] = parseInt(e.target.value);\n        this.props.setForm(formCopy)\n        break;\n      default:\n        console.log(\"unhandled \")\n        console.log(e.target)\n    }\n  }\n\n  _calculateTotal(dim, at, vt) {\n    //this is bound to the scope!\n    console.log(\"calculatin omsethin\")\n    console.log(dim)\n    console.log(at)\n    console.log(vt)\n\n\n    let textileWidthInInches;\n    let textileHeightInInches;\n    if(dim.units === 'centimetres') {\n      textileWidthInInches = parseFloat(CM_TO_INCH*dim.width)\n      textileHeightInInches = parseFloat(CM_TO_INCH*dim.width)\n    } else {\n      textileWidthInInches = parseFloat(dim.width)\n      textileHeightInInches = parseFloat(dim.height)\n    }\n    console.log(`Calcuating for textile of width ${textileWidthInInches}x${textileHeightInInches}`)\n    //LOOKUP TABLES\n    let findRow = -1;\n    let findCol = -1;\n    let findVRow = -1;\n    let findVCol = -1;\n\n    if(at.length > 0 && at[0].length > 0 ) {\n      const tableHeight = at.length;  //rows\n      const tableWidth = at[0].length; //\n\n      for(var i=0; i<tableHeight; i++){\n        //ignore 0,0\n        if(i===0) {\n          //scan header row on first iteration\n          findCol = at[i].slice(1).findIndex(c=>parseInt(c)>=textileWidthInInches)+1;\n        } else {\n          //scans first element of each row on subsequent\n          if( parseInt(at[i][0])>=textileHeightInInches && findRow < 0) {\n            //parseInt(at[i][0])\n            findRow=i\n          }\n        }\n      }\n\n      if(findRow < 0) {\n        console.log(\"No table match!\")\n        return -1\n      }\n\n      if(vt.length > 0) {\n        //we know it will be in the same ColNumber, we just need to match the row\n        const tableHeight = vt.length;  //rows\n        const tableWidth = vt[0].length; //\n        console.log(\"Parsing header row of valance table\")\n        console.log(vt)\n        let tempOptions = []\n\n        //TODO: dont do this!\n        if(this.props.form.selectedValanceOption === '') this.props.form.selectedValanceOption = vt[1][0]\n\n        for(var i =1; i< tableHeight; i++ ) {\n          console.log()\n          console.log(vt[i][0] + \" compared to \" + this.props.form.selectedValanceOption)\n          tempOptions.push(vt[i][0])\n          if(vt[i][0] === this.props.form.selectedValanceOption){\n            console.log(\"found col match: \" + i)\n            findVRow = i;\n          }\n        }\n        this.props.form.valanceOptions = tempOptions  //TODO: dont do this...update the valanceOptions on the form\n\n        //may not find row match if new worksheet\n\n        if(findVRow < 0) return -1\n        //width is assumed, same findCol\n        console.log(at[findRow][findCol])\n        console.log(vt[findVRow][findCol])\n        return (parseFloat(at[findRow][findCol])+parseFloat(vt[findVRow][findCol])).toFixed(2)\n      } else {\n        console.log(\"finding...\")\n        console.log(findRow)\n        console.log(findCol)\n        return (parseFloat(at[findRow][findCol])).toFixed(2);\n      }\n\n\n    }\n    return -1;\n  }\n\n  render () {\n    const {classes, form, workbook} = this.props\n    let activeTable = []\n    let valanceTable = []\n    console.log(workbook)\n    if(typeof workbook.Sheets[form.selectedWorksheet] !== 'undefined' && form.priceGroups.findIndex(pg=>form.selectedPriceGroup) > -1) {\n      const index = form.priceGroups.findIndex(pg=>pg===form.selectedPriceGroup);\n      const rangeString = form.priceGroupMap[index]\n\n      activeTable = parseTableFromRange(rangeString, workbook.Sheets[form.selectedWorksheet])\n\n      if(form.showValance) {\n        console.log(\"fetching valance table...\")\n        const vindex = form.valances.findIndex(v=>v===form.selectedValance)\n        const valanceRangeString = form.valanceMap[vindex]\n        valanceTable = parseTableFromRange(valanceRangeString, workbook.Sheets[form.selectedValance]);\n      }\n\n    }\n\n    //var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n    //   var json_object = JSON.stringify(XL_row_object);\n    const total = this._calculateTotal(form.dimensions, activeTable, valanceTable);\n    console.log(\"units\")\n    console.log(form.dimensions.units)\n    return (\n        <div className={classes.root}>\n          <Typography variant=\"title\">Interactive Pricing Form</Typography>\n\n\n          <div className={classes.column}>\n            <WidthHeightTextInput\n              maxWidth={activeTable[0] ? ( form.dimensions.units==='inches' ? activeTable[0][activeTable[0].length-1] : activeTable[0][activeTable[0].length-1]/CM_TO_INCH) : 0}\n              maxHeight={activeTable[0] ? ( form.dimensions.units==='inches' ? activeTable[activeTable.length-1][0] : activeTable[activeTable.length-1][0]/CM_TO_INCH) : 0}\n              dimensions={form.dimensions}\n              handleChange={this._handleChange.bind(this)}\n              />\n            <OutlinedDropdown\n              title=\"Units\"\n              helperText=\"Please select measurement unit\"\n              items={[\"inches\", \"centimetres\"]}\n              selectedItem={form.dimensions.units}\n              handleSelect={this._handleChange.bind(this)}/>\n          </div>\n          {/*Work Sheets Select*/\n            <div className={classes.row}>\n              <OutlinedDropdown\n                title=\"Worksheet\"\n                helperText=\"Select a Worksheet\"\n                items={workbook.SheetNames.filter(((a,i)=>i%2===0))}\n                selectedItem={this.props.form.selectedWorksheet}\n                handleSelect={this._handleChange.bind(this)}/>\n              <OutlinedDropdown\n                title=\"PriceGroup\"\n                helperText=\"Select a Price Group\"\n                items={this.props.form.selectedWorksheet === 'Interlude' ? this.props.form.priceGroups.slice(0,4) : this.props.form.priceGroups}\n                selectedItem={this.props.form.selectedPriceGroup}\n                handleSelect={this._handleChange.bind(this)}/>\n            </div>\n          }\n\n          <AddValanceOption form={form} workbook={workbook} handleChange={this._handleChange.bind(this)}/>\n\n          <div>\n            <Typography variant=\"display1\"><b>Total:</b> {total} </Typography>\n          </div>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    form:state.form,\n    workbook:state.workbook\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return bindActionCreators({\n    selectWorksheet,\n    setForm\n  }, dispatch);\n}\n\nexport default withStyles(styles)(connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TextileForm))\n","const initialState = {\n    dimensions: {\n      units: 'inches',\n      height: 30,\n      width: 30\n    },\n    selectedWorksheet:'',\n    worksheets:[],\n    selectedPriceGroup: \"PG1\",\n    priceGroups:[\"PG1\",\"PG2\",\"PG3\",\"PG4\",\"PG5\",\"PG6\",\"PG7\",\"PG8\",\"PG9\",\"PG10\"],\n    priceGroupMap:[\"A5:S24\", \"A30:S49\", \"A55:S74\", \"A80:S99\",\"A105:S124\", \"A130:S149\", \"A155:S174\",\"A180:S199\",\"A205:S224\",\"A230:S249\"],\n    showValance: false,\n    selectedValance: 'R Valance',\n    valances:[\"R Valance\", \"V Valance\", \"I Valance\"],\n    valanceMap:[\"A1:S13\",\"A1:S7\",\"A1:S4\"],\n    selectedValanceOption:\"\",\n    valanceOptions: [],\n}\n\nconst form = (state = initialState, action) => {\n    console.log(action)\n    switch (action.type) {\n      case \"SET_FORM\":\n        return {\n          ...state,\n          ...action.payload\n        };\n      case 'WORKBOOK_IMPORT_SUCCESS':\n        return {\n            ...state,\n            selectedWorksheet:action.payload.SheetNames[0],\n            worksheets:action.payload.SheetNames\n        }\n      case 'SELECT_WORKSHEET':\n        return {\n            ...state,\n            selectedWorksheet:action.payload,\n            selectedValance: `${action.payload.charCodeAt(0).toUpperCase()} Valance`,\n            activeSheet:state.worksheets.find(ws=>ws)\n        }\n      default:\n        return state\n    }\n  }\n  export default form\n","const initialState = {\n    SheetNames:[],\n    Sheets:[],\n}\n\nconst workbook = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case 'WORKBOOK_IMPORT_SUCCESS':\n      return {\n          ...state,\n          ...action.payload\n      }\n    case 'WORKBOOK_IMPORT_FAIL':\n      console.log(\"WORKBOOK_IMPORT_FAIL\")\n      console.log(action.payload)\n      return state;\n    default:\n      return state\n  }\n}\nexport default workbook\n","import { createStore } from 'redux'\nimport { combineReducers } from 'redux'\nimport form from './form';\nimport workbook from './workbook';\n\n\nconst rootReducer = combineReducers({\n    form,\n    workbook,\n    \n})\n\nexport default createStore(rootReducer)","import XLSX from 'xlsx-style';\n\nimport store from './store';\n\nexport default async function(fileUrl) {\n\n      var reader = new FileReader();\n      var fileBlob = await fetch(fileUrl);\n      fileBlob = await fileBlob.blob();\n  \n      reader.onload = function(e) {\n        console.log(e)\n\n        var data = e.target.result;\n        var workbook = XLSX.read(data, {\n          type: 'binary'\n        });\n  \n        // workbook.SheetNames.forEach(function(sheetName) {\n        //   // Here is your object\n        //   var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n        //   var json_object = JSON.stringify(XL_row_object);\n        // })\n        store.dispatch({type:'WORKBOOK_IMPORT_SUCCESS', payload:workbook});\n      };\n  \n      reader.onerror = function(ex) {\n        store.dispatch({type:'WORKBOOK_IMPORT_FAIL', payload:ex});\n      };\n      \n      \n      reader.readAsBinaryString(fileBlob);\n\n  };","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\n\nimport TextileForm from './components/TextileForm';\n\nimport store from './store';\n\nimport ExcelToJSON from './ExcelToJSON';\n\n\n\nclass App extends Component {\n  componentWillMount(){\n     ExcelToJSON('./data/Price grids.xlsx');\n\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <TextileForm />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}